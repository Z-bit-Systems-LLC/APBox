@using ApBox.Plugins
@inject IPluginLoader PluginLoader

<Container Fluid>
    <Row Margin="Margin.Is3.FromBottom">
        <Column>
            <Heading Size="HeadingSize.Is3" ElementId="plugins-title">Loaded Plugins</Heading>
            <Paragraph TextColor="TextColor.Muted">Plugins are automatically loaded from the plugins directory</Paragraph>
        </Column>
    </Row>

    @if (_loading)
    {
        <Row>
            <Column>
                <Alert Color="Color.Info" Visible="true">
                    <AlertMessage>
                        <Icon Name="IconName.Sync" Animation="Animation.Spin" Margin="Margin.Is2.FromEnd" />
                        Loading plugins...
                    </AlertMessage>
                </Alert>
            </Column>
        </Row>
    }
    else if (_loadedPlugins.Any())
    {
        <Row>
            @foreach (var plugin in _loadedPlugins)
            {
                <Column ColumnSize="ColumnSize.Is6.OnTablet.Is4.OnDesktop" Margin="Margin.Is4.FromBottom">
                    <Card Height="Height.Is100">
                        <CardHeader>
                            <CardTitle Size="6" Margin="Margin.Is0.FromBottom">
                                <Icon Name="IconName.Code" Margin="Margin.Is2.FromEnd" />
                                @plugin.Name
                            </CardTitle>
                            <CardSubtitle Size="8" TextColor="TextColor.Muted">
                                Version @plugin.Version
                            </CardSubtitle>
                        </CardHeader>
                        <CardBody>
                            <CardText>
                                @plugin.Description
                            </CardText>
                            <Div Margin="Margin.Is3.FromTop">
                                <Badge Color="Color.Success" ElementId="@($"plugin-status-{plugin.Name}")">
                                    <Icon Name="IconName.Check" Margin="Margin.Is1.FromEnd" />
                                    Loaded
                                </Badge>
                            </Div>
                        </CardBody>
                    </Card>
                </Column>
            }
        </Row>
    }
    else
    {
        <Row>
            <Column>
                <Card>
                    <CardBody TextAlignment="TextAlignment.Center" Padding="Padding.Is5.OnY">
                        <Icon Name="IconName.Code" Size="IconSize.x5" TextColor="TextColor.Muted" Margin="Margin.Is3.FromBottom" />
                        <Heading Size="HeadingSize.Is4" Margin="Margin.Is3.FromTop">No Plugins Loaded</Heading>
                        <Paragraph TextColor="TextColor.Muted">
                            Place plugin DLLs in the plugins directory and restart the application
                        </Paragraph>
                    </CardBody>
                </Card>
            </Column>
        </Row>
    }
</Container>

@code {
    [Parameter] public EventCallback<string> OnShowMessage { get; set; }
    
    private List<IApBoxPlugin> _loadedPlugins = new();
    private bool _loading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadPlugins();
    }

    private async Task LoadPlugins()
    {
        try
        {
            _loading = true;
            StateHasChanged();
            
            _loadedPlugins = (await PluginLoader.LoadPluginsAsync()).ToList();
        }
        catch (Exception ex)
        {
            await OnShowMessage.InvokeAsync($"Error loading plugins: {ex.Message}|danger");
        }
        finally
        {
            _loading = false;
            StateHasChanged();
        }
    }
}