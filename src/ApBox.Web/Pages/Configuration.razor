@page "/configuration"
@using ApBox.Web.Components.Configuration

<PageTitle>Configuration - ApBox</PageTitle>

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="display-4">Configuration</h1>
            <p class="text-muted">Manage readers, feedback settings, and system configuration</p>
        </div>
    </div>

    <!-- Navigation Tabs -->
    <div class="row mb-4">
        <div class="col-12">
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class='nav-link @(activeTab == "readers" ? "active" : "")' 
                            @onclick='@(() => SetActiveTab("readers"))'
                            type='button' role='tab'>
                        <span class="oi oi-monitor me-2"></span>Readers
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class='nav-link @(activeTab == "feedback" ? "active" : "")' 
                            @onclick='@(() => SetActiveTab("feedback"))'
                            type='button' role='tab'>
                        <span class="oi oi-bell me-2"></span>Feedback
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class='nav-link @(activeTab == "plugins" ? "active" : "")' 
                            @onclick='@(() => SetActiveTab("plugins"))'
                            type='button' role='tab'>
                        <span class="oi oi-puzzle-piece me-2"></span>Plugins
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class='nav-link @(activeTab == "system" ? "active" : "")' 
                            @onclick='@(() => SetActiveTab("system"))'
                            type='button' role='tab'>
                        <span class="oi oi-cog me-2"></span>System
                    </button>
                </li>
            </ul>
        </div>
    </div>

    <!-- Tab Content -->
    <div class="tab-content">
        @if (activeTab == "readers")
        {
            <ReadersConfiguration OnShowMessage="HandleShowMessage" />
        }
        else if (activeTab == "feedback")
        {
            <FeedbackConfiguration OnShowMessage="HandleShowMessage" />
        }
        else if (activeTab == "plugins")
        {
            <PluginsConfiguration OnShowMessage="HandleShowMessage" />
        }
        else if (activeTab == "system")
        {
            <SystemConfiguration OnShowMessage="HandleShowMessage" />
        }
    </div>
</div>

<!-- Status Messages -->
@if (!string.IsNullOrEmpty(statusMessage))
{
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050">
        <div class="alert alert-@statusMessageType alert-dismissible fade show" role="alert">
            @statusMessage
            <button type="button" class="btn-close" @onclick="ClearStatusMessage"></button>
        </div>
    </div>
}

@code {
    private string activeTab = "readers";
    private string statusMessage = "";
    private string statusMessageType = "info";

    private void SetActiveTab(string tab)
    {
        activeTab = tab;
    }

    private async Task HandleShowMessage(string message)
    {
        var parts = message.Split('|');
        if (parts.Length == 2)
        {
            statusMessage = parts[0];
            statusMessageType = parts[1];
        }
        else
        {
            statusMessage = message;
            statusMessageType = "info";
        }
        
        StateHasChanged();
        
        // Auto-hide after 5 seconds
        await Task.Delay(5000);
        if (statusMessage == parts[0]) // Only clear if it's still the same message
        {
            ClearStatusMessage();
        }
    }

    private void ClearStatusMessage()
    {
        statusMessage = "";
        StateHasChanged();
    }
}